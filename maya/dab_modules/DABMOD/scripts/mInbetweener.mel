global proc mInbetweener () {
	currentUnit -a rad;
	string $selected[] = `ls -sl`;
/*jInbetweener.mel - 	Blends two objects attributes onto many targets. 
			The weighting is based on relative distance from the 
			two controlling objects at the time the script is run .-jpm
			
			Pick source1 source2 target1 target2 target3 .....targetn
	Usage:  jInbetweener
	
	*/	
	// selected[0] is first input
	// selected[1] is second input
	// the rest are targets

	//  substitute blencolors for animBlendNodeAdditiveRotation

	for ($i = 2; $i < `size $selected`; $i++) {
		//string $blcol = `createNode blendColors`;
		string $blcol = `createNode animBlendNodeAdditiveRotation`;
		// set to quarternian
		connectAttr -f ( $selected[0] + ".rotate") ($blcol + ".input1");
		connectAttr -f ( $selected[1] + ".rotate") ($blcol + ".input2");
		string $dist = `createNode distanceBetween`;
		connectAttr -f ( $selected[$i] + ".translate") ($dist + ".point1");
		connectAttr -f ( $selected[0] + ".translate") ($dist + ".point2");
		float $fromStart = `getAttr ($dist + ".distance")`;
		connectAttr -f ( $selected[1] + ".translate") ($dist + ".point2");
		float $fromEnd = `getAttr ($dist + ".distance")`;
		float $totalSpan = ($fromStart + $fromEnd);
		delete $dist ;
		connectAttr ($blcol + ".output")  ($selected[$i] + ".rotate");
		setAttr ($blcol + ".blender") ($fromEnd / $totalSpan);
	} 
	
	currentUnit -a deg;
}
